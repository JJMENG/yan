<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:conditional="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/jdbc 
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/conditional 
	http://www.springframework.org/schema/conditional/spring-conditional.xsd">
	<!-- 导入配置文件 -->
	<context:component-scan base-package="com.spring.mvc"></context:component-scan>
	<context:property-placeholder location="classpath:dataSource.properties"/>
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
        <!-- 指定连接数据库的驱动-->
        <property name="driverClass" value="${jdbc.driverClassName}"/>  
        <!-- 指定连接数据库的URL-->  
        <property name="jdbcUrl" value="${jdbc.url}"/>  
        <!-- 指定连接数据库的用户名-->  
        <property name="user" value="${jdbc.username}"/>  
        <!-- 指定连接数据库的密码-->  
        <property name="password" value="${jdbc.password}"/>  
        <!-- 指定连接池中保留的最大连接数. Default:15-->  
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>  
        <!-- 指定连接池中保留的最小连接数-->  
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>  
        <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->  
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>  
        <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->  
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>  
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->  
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>  
        <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。  
        但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->  
        <property name="maxStatements" value="${jdbc.maxStatements}"/>  
        <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->  
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>  
    </bean>  
    <!-- 配置jdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    	<!-- <property name="dataSource" ref="dataSource"></property> -->
    	<constructor-arg name="dataSource" ref="dataSource"/>
    </bean>  
    <!-- 配置NamedParameterJDBCTemplate -->
  <bean id="namedParameterJDBCTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
    	<constructor-arg><ref bean="dataSource"/></constructor-arg>
  </bean>
  <bean class="com.spring.mvc.jdbc.DBHelper">
  	<!-- <property name="log"></property>
  	<property name="ctx"></property> -->
  </bean>
<!--   <bean id="spittle" class="com.spring.mvc.pojo.Spittle">
  		<property name="id"><null/></property>
  		<property name="message"><null/></property>
  		<property name="time"><null/></property>
  		<property name="latitude"><null/></property>
  		<property name="longtitude"><null/></property>
  </bean> --><!-- 配置国际化资源文件路径 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
        <property name="basename"> 
            <!-- 定义消息资源文件的相对路径 -->
            <value>messages</value> 
        </property> 
    </bean> 
<!--        验证器
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean> -->
    <!-- 基于Cookie的本地化解析器 -->
     <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"> 
       <property name="cookieMaxAge" value="604800"/> 
       <property name="defaultLocale" value="zh_CN"/> 
       <property name="cookieName" value="Language"></property> 
     </bean> 
    <!-- 基于Session的本地化解析器 -->
    <!--<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />--> 
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
    <property name="definitions">
    	<list>
    		<value>/WEB-INF/layout/tiles.xml</value>
    		<value>/WEB-INF/views/**/tiles.xml</value>
    	</list>
    </property>
    </bean>
     <!-- 配置tiles3所需的bean -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"></bean>
    <!-- 配置上传文件所需bean -->
    <bean id="commonsMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
</beans>